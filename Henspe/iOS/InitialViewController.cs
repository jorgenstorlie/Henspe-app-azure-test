// This file has been autogenerated from a class added in the UI designer.
using System;
using System.Collections.Generic;
using System.Drawing;
using CoreGraphics;
using Foundation;
using Henspe.iOS.Const;
using Henspe.iOS.Util;
using UIKit;

namespace Henspe.iOS
{
    public partial class InitialViewController : UIViewController
    {
        int totalPages = 3;
        int currentPage = 0;
        private DateTime debugTime;

        private double scrollTime = 0.2;
        private float scrollViewBorder = 8;
        private List<InitialCardViewController> initialCardViewControllerList = null;

        //private List<Category> categoryList = new List<Category>();
        //private List<Speaker> speakerList = new List<Speaker>();
        //private List<Location> locationList = new List<Location>();

        public InitialViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

            SetupView();
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

			if (UserUtil.credentials.instructionsFinished == false)
            {
                scrScrollView.Scrolled += OnScrollViewEvent;

                DoPopulateInitalCardInScrollView();
            }
            else
            {
                GoToMainScreen();
            }
        }

        void SetupView()
        {
			pagPager.PageIndicatorTintColor = UIColor.White;
			pagPager.CurrentPageIndicatorTintColor = ColorConst.themeSecondaryColor;

			if (UserUtil.credentials.instructionsFinished == false)
            {
                btnSkip.SetTitle(Foundation.NSBundle.MainBundle.LocalizedString("Initial.Skip", null), UIControlState.Normal);
                btnSkip.Hidden = false;

                pagPager.Pages = totalPages;

                btnNext.SetTitle(Foundation.NSBundle.MainBundle.LocalizedString("Initial.Next", null) + " >", UIControlState.Normal);
            }
            else
            {
                scrScrollView.Hidden = true;
                btnSkip.Hidden = true;
                pagPager.Hidden = true;
                btnNext.Hidden = true;
            }

            ShowActivityIndicatorForNext(false);
        }

        private void ShowActivityIndicatorForNext(bool show)
        {
			if (UserUtil.credentials.instructionsFinished == true)
            {
                btnNext.Hidden = true;
                actActivityIndicator.Hidden = true;
            }
            else if (show)
            {
                btnNext.Hidden = true;
                actActivityIndicator.StartAnimating();
                actActivityIndicator.Hidden = false;
            }
            else
            {
                btnNext.Hidden = false;
                actActivityIndicator.Hidden = true;
                actActivityIndicator.StopAnimating();
            }
        }

        void DoPopulateInitalCardInScrollView()
        {
            int pages = totalPages;

            initialCardViewControllerList = new List<InitialCardViewController>();

            for (int i = 1; i <= pages; i++)
            {
                InitialCardViewController initialCardViewController = MakeInitialCardViewController(i);

                scrScrollView.AddSubview(initialCardViewController.View);
                //initialCardViewController.Setup();

                initialCardViewControllerList.Add(initialCardViewController);
            }

            pagPager.Pages = pages;

            scrScrollView.ContentSize = new CGSize(scrScrollView.Frame.Width * pages, scrScrollView.Frame.Height);
        }

        private InitialCardViewController MakeInitialCardViewController(int i)
        {
            RectangleF viewRectangle = new RectangleF();
            viewRectangle.X = (float)(scrScrollView.Frame.Width * (i - 1)) + scrollViewBorder;

            viewRectangle.Y = 0 + scrollViewBorder;
            viewRectangle.Size = new SizeF((float)scrScrollView.Frame.Size.Width - (scrollViewBorder * 2), (float)scrScrollView.Frame.Size.Height);

            InitialCardViewController initialCardViewController = new InitialCardViewController(i);
            initialCardViewController.View.Frame = viewRectangle;

            return initialCardViewController;
        }

        partial void OnSkipClicked(NSObject sender)
        {
            GoToLoginFirstTime();
        }

        partial void OnNextClicked(NSObject sender)
        {
            currentPage = currentPage + 1;
            if (currentPage == totalPages)
                GoToLoginFirstTime();
            else
                GotoPage(currentPage);
        }

        void GotoPage(int gotoPage)
        {
            nfloat x = 0;

            if (gotoPage > 0)
            {
                x = scrScrollView.Frame.Width * gotoPage;
            }

            UIView.Animate(scrollTime, 0, UIViewAnimationOptions.CurveEaseInOut, () =>
            {
                scrScrollView.ContentOffset = new CGPoint(x, 0);
            }, () =>
            {
                // Finished
            });
        }

        void OnScrollViewEvent(object sender, EventArgs e)
        {
            currentPage = (int)System.Math.Floor(scrScrollView.ContentOffset.X / scrScrollView.Frame.Size.Width);
            if (currentPage < 0)
                currentPage = 0;

            pagPager.CurrentPage = currentPage;

            //InitialCardViewController currentInitialCardViewController = initialCardViewControllerList[currentPage];
            //currentInitialCardViewController.Setup();

			if (UserUtil.credentials.instructionsFinished == false)
            {
                if (currentPage == 2)
                {
                    //if (btnSkip.Hidden == false)
                    ShowActivityIndicatorForNext(false);
                    //else
                    //    ShowActivityIndicatorForNext(true);
                }
                else
                    ShowActivityIndicatorForNext(false);
            }

            foreach (InitialCardViewController initialCardViewController in initialCardViewControllerList)
                initialCardViewController.SetScrollValue(scrScrollView.Frame.Width, scrScrollView.ContentOffset.X);
        }

        private void TellThatUserNeedNetworkAtFirstRun()
        {
            UIAlertView alert = new UIAlertView(Foundation.NSBundle.MainBundle.LocalizedString("Initial.Alert.NoNetwork.Title", null),
                 Foundation.NSBundle.MainBundle.LocalizedString("Initial.Alert.NoNetwork.Message", null),
                 null,
                 Foundation.NSBundle.MainBundle.LocalizedString("Alert.OK", null),
                 null);

            alert.Clicked += (s, b) =>
            {
                if (b.ButtonIndex == 0)
                {
                    // OK chosen
                    //GetEvent();
                }
            };

            alert.Show();
        }

        // GoToTabs();

        private void GoToLoginFirstTime()
        {
			UserUtil.credentials.instructionsFinished = true;

            InvokeOnMainThread(() =>
            {
                this.PerformSegue("segueInitialized", this);
            });
        }

        private void GoToMainScreen()
        {
            InvokeOnMainThread(() =>
            {
                this.PerformSegue("segueInitialized", this);
            });
        }

        public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            if (segue.Identifier == "segueInitialized")
            {
            }
        }

        public override void DidRotate(UIInterfaceOrientation fromInterfaceOrientation)
        {
            base.DidRotate(fromInterfaceOrientation);

            if (DeviceUtil.isIpad())
            {
                foreach (UIView subview in scrScrollView.Subviews)
                {
                    subview.RemoveFromSuperview();
                }

                DoPopulateInitalCardInScrollView();
                pagPager.Pages = totalPages;
                currentPage = 0;
                ShowActivityIndicatorForNext(false);

                CGPoint leftOffset = new CGPoint(0, 0);
                scrScrollView.SetContentOffset(leftOffset, true);
            }
        }

        [Action("UnwindToInit:")]
        public void UnwindToInitViewController(UIStoryboardSegue segue)
        {
        }
    }
}