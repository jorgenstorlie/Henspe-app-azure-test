// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Threading.Tasks;
using CoreLocation;
using Foundation;
using Henspe.Core.Const;
using Henspe.iOS.AppModel;
using Henspe.iOS.Const;
using Henspe.iOS.Util;
using UIKit;

namespace Henspe.iOS
{
    public partial class MainViewController : UIViewController
	{
        private bool showHelpUs = false;
		private MainListTableViewSource mainListTableViewSource = null;

		// Events
		NSObject observerActivatedOccured;

        private UIStringAttributes normalText = new UIStringAttributes
		{
            ForegroundColor = ColorConst.snlaText,
			Font = FontConst.fontMedium
		};

        public MainViewController(IntPtr handle) : base(handle)
		{
            AppDelegate.current.mainViewController = this;
            AppDelegate.current.locationManager = new LocationManager();
        }

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			SetupNavigationBar();
			SetupView();

			// Events
			observerActivatedOccured = NSNotificationCenter.DefaultCenter.AddObserver(new NSString(EventConst.appActivated), HandleActivatedOccured);
		}

		public void HandleActivatedOccured(NSNotification notification)
        {
            if(AppDelegate.current.locationManager.gpsCurrentPositionObject != null && AppDelegate.current.locationManager.locationManager.Location != null)
                AppDelegate.current.locationManager.gpsCurrentPositionObject.gpsCoordinates = AppDelegate.current.locationManager.locationManager.Location.Coordinate;

            RefreshPositionAndAddressRows();
        }

		private void SetupNavigationBar()
		{
			// Transparent background
			UIImage emptyImage = new UIImage();
			this.NavigationController.NavigationBar.Translucent = true;
			this.NavigationController.NavigationBar.SetBackgroundImage(emptyImage, UIBarMetrics.Default);
			this.NavigationController.NavigationBar.ShadowImage = emptyImage;

            // Logo
			UIImage imgLogo = UIImage.FromFile("ic_snla.png");
			UIImageView imgViewLogo = new UIImageView(imgLogo);
			this.NavigationItem.TitleView = imgViewLogo;

            NavigationItem.RightBarButtonItem.TintColor = ColorConst.snlaBlue;
        }

		private void OnSettingsClicked()
		{
			UIApplication.SharedApplication.OpenUrl(new NSUrl(UIApplication.OpenSettingsUrlString));
		}

		public override void ViewDidUnload()
		{
			base.ViewDidUnload();
		}

		public override void WillMoveToParentViewController(UIViewController parent)
		{
			base.WillMoveToParentViewController(parent);
		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

            btnHelpUs.SetTitleColor(ColorConst.snlaBlue, UIControlState.Normal);
            btnHelpUs.Layer.BorderColor = btnHelpUs.TitleColor(UIControlState.Normal).CGColor;
            btnHelpUs.Layer.BorderWidth = 1;
            btnHelpUs.Layer.CornerRadius = 5.0f;

            View.BackgroundColor = ColorConst.snlaBackground; 

            if(!showHelpUs)
            {
                btnHelpUs.Hidden = true;
                constraintHelpUsHeight.Constant = 0;
            }

            myTableView.ReloadData();
		}

		public override void ViewDidAppear(bool animated)
		{
			//base.ViewDidAppear(animated);

		}

		public override void ViewWillDisappear(bool animated)
		{
			base.ViewWillDisappear(animated);
		}

		private void SetupView()
		{
            // Table setup
            mainListTableViewSource = new MainListTableViewSource(this);
			myTableView.Source = mainListTableViewSource;
			myTableView.BackgroundColor = UIColor.Clear;
            myTableView.SeparatorStyle = UITableViewCellSeparatorStyle.None;

            myTableView.RowHeight = UITableView.AutomaticDimension;
            myTableView.EstimatedRowHeight = 50;

			AutomaticallyAdjustsScrollViewInsets = false;

			UIEdgeInsets insets = new UIEdgeInsets(0, 0, 100, 0);
			myTableView.ContentInset = insets;

			mainListTableViewSource.sectionsWithRows = AppDelegate.current.structure;
		}

        private void RefreshPositionRow()
		{
			RefreshTableRow(1, MainListTableViewSource.LocationRow);
		}

		private void RefreshAddressRow()
        {
            RefreshTableRow(1, MainListTableViewSource.AddressRow);
        }

        public void RefreshPositionAndAddressRows()
        {
            NSIndexPath[] indexPathList = { 
                NSIndexPath.FromRowSection(MainListTableViewSource.LocationRow, 1),
                NSIndexPath.FromRowSection(MainListTableViewSource.AddressRow, 1),
            };
            myTableView.ReloadRows(indexPathList, UITableViewRowAnimation.Fade);
        }

        private void RefreshTableRow(int section, int row)
        {
			NSIndexPath[] indexPathList = new NSIndexPath[] { NSIndexPath.FromRowSection(row, section) };
			myTableView.ReloadRows(indexPathList, UITableViewRowAnimation.Fade);
        }

        partial void HelpUsClicked(NSObject sender)
        {
        }
    }
}