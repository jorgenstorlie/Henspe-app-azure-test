// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Threading.Tasks;
using System.Timers;
using CoreLocation;
using Foundation;
using Henspe.Core.ViewModel;
using Henspe.iOS.Util;
using MapKit;
using UIKit;

namespace Henspe.iOS
{
	public partial class EnterCoordinatesViewController : UIViewController
	{
        private bool _isFocusing;
        private EnterCoordinatesViewModel _viewmodel;

        public EnterCoordinatesViewController (IntPtr handle) : base (handle)
		{
            _viewmodel = new EnterCoordinatesViewModel();
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            _viewmodel.Init();

            mapView.RegionChanged += MapView_RegionChanged;
            SVGUtil.LoadSVGToImageView(imgMapCenter, "ic_e_posisjon_given.svg", new System.Collections.Generic.Dictionary<string, string>());
        }

        partial void latitudeChanged(NSObject sender)
        {
            var text = txtDegreesNorth.Text;

            if (text.Length > 2 && !text.Contains(","))
            {
                txtDegreesNorth.Text = text.Insert(2, ",");
            }

            if (text.Length >= 7)
                txtDegreesEast.BecomeFirstResponder();
        }

        partial void longitudeChanged(NSObject sender)
        {
            var text = txtDegreesEast.Text;

            if (text.Length > 2 && !text.Contains(","))
            {
                txtDegreesEast.Text = text.Insert(2, ",");
            }

            if (text.Length >= 6)
                FocusMap();

            if (text.Length >= 7)
                txtDegreesEast.ResignFirstResponder();
        }

        private void FocusMap()
        {
            _isFocusing = true;
            if (!double.TryParse(txtDegreesNorth.Text, out double latitude))
                return;

            if (!double.TryParse(txtDegreesEast.Text, out double longitude))
                return;

            var center = new CLLocationCoordinate2D(latitude, longitude);
            var span = new MKCoordinateSpan(0.01, 0.02);
            var region = new MKCoordinateRegion(center, span);
            mapView.SetRegion(region, true);

        }

        void MapView_RegionChanged(object sender, MKMapViewChangeEventArgs e)
        {
            if (_isFocusing)
            {
                Task.Run(async () =>
                {
                    await Task.Delay(2000);
                    _isFocusing = false;
                });
            }
            else
            {
                var center = mapView.CenterCoordinate;
                txtDegreesNorth.Text = center.Latitude.ToString("N4");
                txtDegreesEast.Text = center.Longitude.ToString("N4");
            }

            imgMapCenter.Hidden = false;
            var location = mapView.CenterCoordinate;
            _viewmodel.Latitude = location.Latitude;
            _viewmodel.Longitude = location.Longitude;
            _viewmodel.Save();
        }
    }
}
