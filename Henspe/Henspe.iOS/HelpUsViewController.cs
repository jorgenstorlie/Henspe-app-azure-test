// This file has been autogenerated from a class added in the UI designer.

using System;
using AVFoundation;
using AVKit;
using CoreAnimation;
using CoreGraphics;
using Foundation;
using Henspe.iOS.Const;
using Henspe.iOS.Util;
using UIKit;

namespace Henspe.iOS
{
    public partial class HelpUsViewController : UIViewController, ICALayerDelegate
	{
        private CAGradientLayer _gradient;
        private AVPlayer _player;
        private AVPlayerViewController _preview;
        private CAGradientLayer _gradient2;

        public HelpUsViewController (IntPtr handle) : base (handle)
		{
		}

        public HelpUsViewController() : base("HelpUs", null)
        {

        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = LangUtil.Get("HelpUs.Title");

            View.BackgroundColor = ColorConst.backgroundColor;
            viewAboutContainer.BackgroundColor = ColorConst.backgroundColor;

            lblAboutHENSPE.TextColor = ColorConst.textColor;
            lblAboutSNLA.TextColor = ColorConst.textColor;
            lblYesPlease.TextColor = ColorConst.textColor;
            labShowMore.TextColor = ColorConst.textColor;

            btnAccept.BackgroundColor = ColorConst.Blue;
            btnAccept.SetTitleColor(UIColor.LightTextColor, UIControlState.Normal);
            btnNoThankYou.SetTitleColor(ColorConst.Blue, UIControlState.Normal);

            lblSMS.TextColor = ColorConst.Blue;
            lblEmail.TextColor = ColorConst.Blue;

            btnAccept.Layer.CornerRadius = 5;

            lblAboutHENSPE.Text = LangUtil.Get("HelpUs.AboutHENSPE");
            lblAboutSNLA.Text = LangUtil.Get("HelpUs.AboutSNLA");
            labShowMore.Text = LangUtil.Get("HelpUs.More");
            btnNoThankYou.SetTitle(LangUtil.Get("HelpUs.No"), UIControlState.Normal);
            //btnSMS.SetTitle(LangUtil.Get("HelpUs.SMS"), UIControlState.Normal);
            //btnEmail.SetTitle(LangUtil.Get("HelpUs.Email"), UIControlState.Normal);

            SetupScrollView();

            SetupVideo();

            txtEpost.Hidden = true;
            constraintEmailHeight.Constant = 0;
        }

        private void SetupScrollView()
        {
            SVGUtil.LoadSVGToImageView(imgArrow, "ic_arrow_up.svg", new System.Collections.Generic.Dictionary<string, string>());

            _gradient = new CAGradientLayer();
            _gradient.Frame = scrollViewAboutSNLA.Bounds;
            _gradient.Colors = new[] { ColorConst.textColor.CGColor, UIColor.Clear.CGColor };
            _gradient.Locations = new[] { new NSNumber(0.9f), new NSNumber(1) };
            _gradient.Delegate = this;

            _gradient2 = new CAGradientLayer();
            _gradient2.Frame = viewAboutContainer.Frame;
            _gradient2.Colors = new[] { UIColor.Clear.CGColor, ColorConst.textColor.CGColor };
            _gradient2.Locations = new[] { new NSNumber(0.0f), new NSNumber(0.1f) };
            _gradient2.Delegate = this;

            scrollViewAboutSNLA.Layer.Mask = _gradient;
            scrollViewAboutSNLA.Scrolled += ScrollViewAboutSNLA_Scrolled;

            viewAboutContainer.Layer.Mask = _gradient2;
        }

        private void SetupVideo()
        {
            var url = NSUrl.FromFilename("video480.mp4");
            _player = new AVPlayer(url);
            _preview = new AVPlayerViewController();
            _preview.Player = _player;
            viewMovieContainer.AddSubview(_preview.View);
            _preview.ShowsPlaybackControls = true;
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

            _player.Play();
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

            _preview.View.Frame = viewMovieContainer.Bounds;
        }

        public override void ViewDidDisappear(bool animated)
        {
            base.ViewDidDisappear(animated);

            _player.Pause();
        }

        public override void ViewDidLayoutSubviews()
        {
            base.ViewDidLayoutSubviews();

            UpdateGradient();
        }

        void ScrollViewAboutSNLA_Scrolled(object sender, EventArgs e)
        {
            var scrollViewHeight = scrollViewAboutSNLA.Frame.Size.Height;
            var scrollContentSizeHeight = scrollViewAboutSNLA.ContentSize.Height;
            var scrollOffset = scrollViewAboutSNLA.ContentOffset.Y;

            if (scrollOffset + scrollViewHeight == scrollContentSizeHeight)
            {
                HideGradient();
            }
            else
            {
                UpdateGradient();
            }
        }

        private void UpdateGradient()
        {
            scrollViewAboutSNLA.Layer.Mask = _gradient;
            _gradient.Frame = new CGRect(0, scrollViewAboutSNLA.Bounds.Top, scrollViewAboutSNLA.Bounds.Width, scrollViewAboutSNLA.Bounds.Height);
            _gradient2.Frame = new CGRect(0, viewAboutContainer.Bounds.Top, viewAboutContainer.Bounds.Width, viewAboutContainer.Bounds.Height);
        }

        [Export("actionForLayer:forKey:")]
        public NSObject ActionForLayer(CALayer layer, string eventKey)
        {
            return null;
        }

        private void HideGradient()
        {
            scrollViewAboutSNLA.Layer.Mask = null;
        }

        partial void EmailChanged(NSObject sender)
        {
            BeginInvokeOnMainThread(() =>
            {
                if (swtEmail.On)
                {
                    UIView.AnimateAsync(2, () =>
                    {
                        constraintEmailHeight.Constant = 30;
                        txtEpost.Hidden = false;
                    });
                }
                else
                {
                    UIView.AnimateAsync(2, () =>
                    {
                        constraintEmailHeight.Constant = 0;
                        txtEpost.Hidden = true;
                    });
                }
            });
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);

            if(disposing)
            {
                _gradient = null;
                _gradient2 = null;  
            }
        }
    }
}
